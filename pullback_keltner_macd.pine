//@version=4
strategy("Keltner Channel Strategy", overlay=true)

// BEGIN TIME WINDOW
var from_year  = input(defval = 2019, title = "From Year", minval = 2010)
var from_month = input(defval = 1, title = "From Month", minval = 1, maxval = 12)
var from_day   = input(defval = 1, title = "From Day", minval = 1, maxval = 31)
var to_year    = input(defval = 9999, title = "To Year", minval = 2011)
var to_month   = input(defval = 1, title = "To Month", minval = 1, maxval = 12)
var to_day     = input(defval = 1, title = "To Day", minval = 1, maxval = 31)
var window_start  = timestamp(from_year, from_month, from_day, 00, 00) 
var window_finish = timestamp(to_year, to_month, to_day, 23, 59)   
window() => time >= window_start and time <= window_finish ? true : false
// END TIME WINDOW

var ttf_res = input(title="Trading Timeframe", type=input.resolution, defval="240")

// BEGIN KELTNER CHANNEL
var kc_true_range = input(true)
var kc_len = input(21)
var kc_mul = input(1.8)
var kc_plot = input(true)

kc_center = ema(close, kc_len)
kc_range = high - low
kc_range_ema = ema(kc_range, kc_len)
kc_upper = kc_center + kc_range_ema * kc_mul
kc_lower = kc_center - kc_range_ema * kc_mul

kc_upper_htf = security(syminfo.tickerid, ttf_res, kc_upper)
kc_lower_htf = security(syminfo.tickerid, ttf_res, kc_lower)
kc_center_htf = security(syminfo.tickerid, ttf_res, kc_center)

plot(kc_upper_htf, title="Keltner upper", color=color.red, transp=kc_plot ? 0 : 100)
plot(kc_lower_htf, title="Keltner lower", color=color.red, transp=kc_plot ? 0 : 100)
plot(kc_center_htf, title="Keltner center", color=color.red, transp=kc_plot ? 0 : 100)


// KELTNER CHANNEL

var risk = input(title="Max risk %", type=input.float, minval=0.0, step=0.1, defval=2.0) * 0.01
var sl = low
var tp = low

var state = 0
plot_state = 0

// Cancel    
if state == 1 and low <= kc_lower_htf
    state := 0
    plot_state := 3    

// Stop-Loss
if state == 2 and low <= sl
    state := 3
    plot_state := 4

// Take-Profit
if state == 2 and high >= tp
    state := 3
    plot_state := 5

// Signal
if state < 2 and high >= kc_upper_htf
    state := 1
    plot_state := 1

// Trigger
if state == 1 and low <= kc_center_htf
    state := 2
    plot_state := 2
    sl := low - (low * 0.01)
    tp := low + (low * 0.01)

if (state == 2 and window())
    strategy.entry(id="Buy", long=true)
    
if (state == 3 and window())
    strategy.close(id="Buy")
    state := 0

// plotchar(plot_state == 1, text="Signal", color=color.yellow, location=location.abovebar)
// plotchar(plot_state == 2, text='Trigger', color=color.green, location=location.belowbar)
// plotchar(plot_state == 3, text='Cancel', color=color.red, location=location.belowbar)
// plotchar(plot_state == 4, text='SL', color=color.red, location=location.belowbar)
// plotchar(plot_state == 5, text='TP', color=color.red, location=location.abovebar)


